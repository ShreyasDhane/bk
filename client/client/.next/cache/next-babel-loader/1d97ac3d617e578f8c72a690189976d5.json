{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\Bhimkatta-20240216T072757Z-001\\\\Bhimkatta\\\\client\\\\client\\\\components\\\\post\\\\add-comment\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { FetchContext } from '../../../store/fetch';\nimport TextArea from '../../textarea';\nimport Button from '../../button';\nimport styles from './add-comment.module.css';\nconst AddComment = ({\n  questionId,\n  answerId,\n  setShowAddComment,\n  setQuestion\n}) => {\n  const {\n    authAxios\n  } = useContext(FetchContext);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  return __jsx(Formik, {\n    initialValues: {\n      comment: ''\n    },\n    onSubmit: async (values, {\n      setStatus,\n      resetForm\n    }) => {\n      setLoading(true);\n      try {\n        const {\n          data\n        } = await authAxios.post(`/comment/${questionId}/${answerId ? answerId : ''}`, values);\n        setQuestion(data);\n        resetForm({});\n        setShowAddComment(false);\n      } catch (error) {\n        setStatus(error.response.data.message);\n      }\n      setLoading(false);\n    },\n    validationSchema: Yup.object({\n      comment: Yup.string().required('Comment is missing.').min(5, 'Comment must be at least 5 characters.').max(1000, 'Comment cannot be longer than 1000 characters.')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    status,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"form\", {\n    className: styles.container,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(TextArea, {\n    name: \"comment\",\n    autoComplete: \"off\",\n    value: values.comment,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    hasError: touched.comment && errors.comment,\n    errorMessage: errors.comment && errors.comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), __jsx(\"p\", {\n    className: styles.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, status), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    className: styles.button,\n    type: \"submit\",\n    primary: true,\n    isLoading: loading,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Add Comment\"))));\n};\nexport default AddComment;","map":{"version":3,"names":["React","useState","useContext","Formik","Yup","FetchContext","TextArea","Button","styles","AddComment","questionId","answerId","setShowAddComment","setQuestion","authAxios","loading","setLoading","__jsx","initialValues","comment","onSubmit","values","setStatus","resetForm","data","post","error","response","message","validationSchema","object","string","required","min","max","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","errors","touched","status","handleChange","handleBlur","handleSubmit","isSubmitting","className","container","name","autoComplete","value","onChange","onBlur","hasError","errorMessage","button","type","primary","isLoading","disabled"],"sources":["C:/Users/HP/Downloads/Bhimkatta-20240216T072757Z-001/Bhimkatta/client/client/components/post/add-comment/index.js"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\n\nimport { FetchContext } from '../../../store/fetch'\n\nimport TextArea from '../../textarea'\nimport Button from '../../button'\n\nimport styles from './add-comment.module.css'\n\nconst AddComment = ({\n  questionId,\n  answerId,\n  setShowAddComment,\n  setQuestion\n}) => {\n  const { authAxios } = useContext(FetchContext)\n\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Formik\n      initialValues={{ comment: '' }}\n      onSubmit={async (values, { setStatus, resetForm }) => {\n        setLoading(true)\n        try {\n          const { data } = await authAxios.post(\n            `/comment/${questionId}/${answerId ? answerId : ''}`,\n            values\n          )\n\n          setQuestion(data)\n\n          resetForm({})\n          setShowAddComment(false)\n        } catch (error) {\n          setStatus(error.response.data.message)\n        }\n        setLoading(false)\n      }}\n      validationSchema={Yup.object({\n        comment: Yup.string()\n          .required('Comment is missing.')\n          .min(5, 'Comment must be at least 5 characters.')\n          .max(1000, 'Comment cannot be longer than 1000 characters.')\n      })}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        status,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => (\n        <form className={styles.container} onSubmit={handleSubmit}>\n          <TextArea\n            name=\"comment\"\n            autoComplete=\"off\"\n            value={values.comment}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            hasError={touched.comment && errors.comment}\n            errorMessage={errors.comment && errors.comment}\n          />\n          <p className={styles.status}>{status}</p>\n          <div>\n            <Button\n              className={styles.button}\n              type=\"submit\"\n              primary\n              isLoading={loading}\n              disabled={isSubmitting}\n            >\n              Add Comment\n            </Button>\n          </div>\n        </form>\n      )}\n    </Formik>\n  )\n}\n\nexport default AddComment\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}