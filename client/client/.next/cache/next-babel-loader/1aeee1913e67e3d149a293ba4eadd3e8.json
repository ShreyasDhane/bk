{"ast":null,"code":"var __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport Link from 'next/link';\nimport cn from 'classnames';\nimport styles from './nav-item.module.css';\nconst NavItem = _ref => {\n  let {\n      href,\n      children,\n      selected\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"href\", \"children\", \"selected\"]);\n  return __jsx(Link, {\n    href: href,\n    as: href\n  }, __jsx(\"a\", _extends({\n    className: cn(styles.navItem, selected && styles.navItemSelected)\n  }, props), children));\n};\nexport default NavItem;","map":null,"metadata":{},"sourceType":"module"}